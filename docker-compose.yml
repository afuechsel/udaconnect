version: "3.9"
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"
  kafka:
    container_name: kafka-service
    hostname: kafka-service
    image: wurstmeister/kafka:2.12-2.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
  postgres: 
    restart: "no"
    container_name: postgres
    image: postgis/postgis:12-2.5-alpine
    ports:
      - "5432:5432"
    environment: 
      POSTGRES_USER: "ct_admin"
      POSTGRES_PASSWORD: "wowimsosecure"
      POSTGRES_DB: "geoconnections"
  udaconnect-person-api:
    restart: "no"
    container_name: udaconnect-person-api
    build: modules/services/person
    ports:
      - "3001:5000"
      - "5005:5005"
    environment:
      DB_USERNAME: "ct_admin"
      DB_PASSWORD: "wowimsosecure"
      DB_NAME: "geoconnections"
      DB_PORT: "5432"
      DB_HOST: "postgres"
    depends_on:
      - postgres
  udaconnect-location-api:
    restart: "no"
    container_name: udaconnect-location-api
    build: modules/services/location
    ports:
      - "3002:5000"
    environment:
      DB_USERNAME: "ct_admin"
      DB_PASSWORD: "wowimsosecure"
      DB_NAME: "geoconnections"
      DB_PORT: "5432"
      DB_HOST: "postgres"
    depends_on:
      kafka:
        condition: service_healthy
  udaconnect-connection-api:
    restart: "no"
    container_name: udaconnect-connection-api
    build: modules/services/connection
    ports:
      - "3003:5000"
    environment:
      DB_USERNAME: "ct_admin"
      DB_PASSWORD: "wowimsosecure"
      DB_NAME: "geoconnections"
      DB_PORT: "5432"
      DB_HOST: "postgres"
  udaconnect-app:
    restart: "no"
    container_name: udaconnect-app
    build: modules/frontend
    ports:
      - "3000:3000"
    environment: 
      REACT_APP_PERSON_API_URL: "http://localhost:3001/api"
      REACT_APP_LOCATION_API_URL: "http://localhost:3002/api"
      REACT_APP_CONNECTION_API_URL: "http://localhost:3003/api"
    depends_on:
      - postgres
